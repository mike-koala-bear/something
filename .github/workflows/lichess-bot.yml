name: Lichess Bot Hybrid Tournament → Matchmaking

on:
  workflow_dispatch:
    inputs:
      tournament_id:
        description: "Tournament ID to auto-join (optional)"
        required: false
        default: ""
      additional_command:
        description: "Optional commands to pass"
        required: false
        default: ""
      never_stop:
        description: "Never stop matchmaking unless it stops itself"
        required: false
        type: boolean
        default: "true"

permissions:
  actions: write
  contents: read

jobs:
  run-bot:
    runs-on: ubuntu-latest
    if: github.repository_owner == github.actor

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Clone Private Config Repo
        uses: actions/checkout@v5
        with:
          repository: mike-koala-bear/tacticalbot-config
          token: ${{ secrets.PRIVATE_CONFIG_TOKEN }}
          path: tacticalbot-config

      - name: Copy Private Config
        run: |
          if [ -f tacticalbot-config/config.yml ]; then
            cp tacticalbot-config/config.yml ./config.yml
          else
            echo "❌ config.yml not found in tacticalbot-config repo"
            exit 1
          fi

      - name: Inject Bot Token
        run: |
          sed -i "s/tokenXXXXX/${{ secrets.LICHESS_TOKEN }}/g" config.yml

      - name: Start bot
        env:
          LICHESS_TOKEN: ${{ secrets.LICHESS_TOKEN }}
        run: |
          echo "Starting bot..."
          CONFIG_FILE="./config.yml"
          TOURNAMENT_ID="${{ github.event.inputs.tournament_id }}"
          ADDITIONAL_CMD=${{ toJSON(github.event.inputs.additional_command) }}

          if [ ! -f "$CONFIG_FILE" ]; then
            echo "❌ Config file not found!"
            exit 1
          fi

          # Tournament logic
          if [ -n "$TOURNAMENT_ID" ]; then
            STATUS=$(curl -s -H "Authorization: Bearer $LICHESS_TOKEN" \
              "https://lichess.org/api/tournament/$TOURNAMENT_ID" | jq -r '.status')

            if [ "$STATUS" == "started" ]; then
              echo "Tournament already started! Joining immediately..."
              CMD="python3 -u user_interface.py --config $CONFIG_FILE tournament $TOURNAMENT_ID"
              [ -n "$ADDITIONAL_CMD" ] && CMD="$CMD $ADDITIONAL_CMD"
              eval "$CMD"

            elif [ "$STATUS" == "created" ]; then
              echo "Tournament not started yet. Playing matchmaking while waiting..."
              python3 -u user_interface.py --config "$CONFIG_FILE" matchmaking &
              MM_PID=$!

              while true; do
                STATUS=$(curl -s -H "Authorization: Bearer $LICHESS_TOKEN" \
                  "https://lichess.org/api/tournament/$TOURNAMENT_ID" | jq -r '.status')
                if [ "$STATUS" == "started" ]; then
                  echo "Tournament started!"
                  [ -n "$MM_PID" ] && kill -SIGTERM $MM_PID
                  break
                fi
                sleep 5
              done

              CMD="python3 -u user_interface.py --config $CONFIG_FILE tournament $TOURNAMENT_ID"
              [ -n "$ADDITIONAL_CMD" ] && CMD="$CMD $ADDITIONAL_CMD"
              eval "$CMD"

            else
              echo "Tournament already finished or unknown status. Playing matchmaking..."
              CMD="python3 -u user_interface.py --config $CONFIG_FILE matchmaking"
              [ -n "$ADDITIONAL_CMD" ] && CMD="$CMD $ADDITIONAL_CMD"
              eval "$CMD"
            fi

          else
            echo "No tournament provided. Starting matchmaking only..."
            CMD="python3 -u user_interface.py --config $CONFIG_FILE matchmaking"
            [ -n "$ADDITIONAL_CMD" ] && CMD="$CMD $ADDITIONAL_CMD"
            eval "$CMD"
          fi
