name: Lichess Bot

on:
  workflow_dispatch:
    inputs:
      tournament_id:
        description: "Tournament ID to auto-join (optional)"
        required: false
        default: ""
      additional_command:
        description: "Optional commands to pass (wrap in quotes)"
        required: false
        default: ""
      never_stop:
        description: "Never stop matchmaking unless it stops itself"
        required: false
        type: boolean
        default: "true"

jobs:
  run-bot:
    runs-on: ubuntu-latest
    if: github.repository_owner == github.actor

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Start bot
        env:
          LICHESS_TOKEN: ${{ secrets.LICHESS_TOKEN }}
        run: |
          echo "Starting bot..."

          TOURNAMENT_ID="${{ github.event.inputs.tournament_id }}"

          if [ -n "$TOURNAMENT_ID" ]; then
            STATUS=$(curl -s -H "Authorization: Bearer $LICHESS_TOKEN" \
              "https://lichess.org/api/tournament/$TOURNAMENT_ID" | jq -r '.status')

            if [ "$STATUS" == "started" ]; then
              echo "Tournament already started! Joining immediately..."
              python3 -u user_interface.py tournament "$TOURNAMENT_ID"

            elif [ "$STATUS" == "created" ]; then
              echo "Tournament not started yet. Playing matchmaking while waiting..."
              python3 -u user_interface.py matchmaking &
              MM_PID=$!

              while true; do
                STATUS=$(curl -s -H "Authorization: Bearer $LICHESS_TOKEN" \
                  "https://lichess.org/api/tournament/$TOURNAMENT_ID" | jq -r '.status')
                if [ "$STATUS" == "started" ]; then
                  echo "Tournament started!"
                  [ -n "$MM_PID" ] && kill -SIGTERM $MM_PID
                  break
                fi
                sleep 5
              done

              python3 -u user_interface.py tournament "$TOURNAMENT_ID"

            else
              echo "Tournament already finished or unknown status. Playing matchmaking..."
              python3 -u user_interface.py matchmaking
            fi

          else
            echo "No tournament provided. Starting matchmaking only..."
            python3 -u user_interface.py matchmaking
          fi
