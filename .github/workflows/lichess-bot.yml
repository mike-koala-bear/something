name: Lichess Bot

on:
  workflow_dispatch:
    inputs:
      tournament_id:
        description: "Tournament ID to auto-join (optional)"
        required: false
        default: ""
      additional_command:
        description: "Optional commands to pass (wrap in quotes)"
        required: false
        default: ""
      never_stop:
        description: "Never stop matchmaking unless it stops itself"
        required: false
        type: boolean
        default: "true"

jobs:
  run-bot:
    runs-on: ubuntu-latest
    if: github.repository_owner == github.actor

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Clone Private Config Repo
        uses: actions/checkout@v5
        with:
          repository: mike-koala-bear/tacticalbot-config
          token: ${{ secrets.PRIVATE_CONFIG_TOKEN }}
          path: tacticalbot-config

      - name: Copy Private Config
        run: |
          if [ -f tacticalbot-config/config.yml ]; then
            cp tacticalbot-config/config.yml ./config.yml
          else
            echo "‚ùå config.yml not found in tacticalbot-config repo"
            exit 1
          fi

      - name: Inject Bot Token
        run: |
          sed -i "s/tokenXXXXX/${{ secrets.LICHESS_TOKEN }}/g" config.yml

      - name: Start bot
        env:
          LICHESS_TOKEN: ${{ secrets.LICHESS_TOKEN }}
        run: |
          echo "Starting bot..."

          TOURNAMENT_ID="${{ github.event.inputs.tournament_id }}"
          ADDITIONAL_CMD=${{ toJSON(github.event.inputs.additional_command) }}

          if [ -n "$TOURNAMENT_ID" ]; then
            while true; do
              STATUS=$(curl -s -H "Authorization: Bearer $LICHESS_TOKEN" \
                "https://lichess.org/api/tournament/$TOURNAMENT_ID" | jq -r '.status')

              if [ "$STATUS" == "created" ]; then
                echo "Tournament not started yet. Playing matchmaking..."
                python3 -u user_interface.py matchmaking &
                MM_PID=$!
                while [ "$STATUS" == "created" ]; do
                  sleep 5
                  STATUS=$(curl -s -H "Authorization: Bearer $LICHESS_TOKEN" \
                    "https://lichess.org/api/tournament/$TOURNAMENT_ID" | jq -r '.status')
                done
                [ -n "$MM_PID" ] && kill -SIGTERM $MM_PID
              fi

              if [ "$STATUS" == "started" ]; then
                echo "Tournament is in progress! Joining now..."
                CMD="python3 -u user_interface.py tournament $TOURNAMENT_ID"
                [ -n "$ADDITIONAL_CMD" ] && CMD="$CMD $ADDITIONAL_CMD"
                eval "$CMD"
                break
              fi

              if [ "$STATUS" == "finished" ]; then
                echo "Tournament finished. Resuming matchmaking..."
                python3 -u user_interface.py matchmaking
                break
              fi

              sleep 5
            done
          else
            echo "No tournament provided. Starting matchmaking only..."
            python3 -u user_interface.py matchmaking
          fi
