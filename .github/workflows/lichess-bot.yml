name: Run botli (Hybrid: Tournament → Matchmaking)

on:
  workflow_dispatch:
    inputs:
      upgrade:
        description: "Upgrade to a Lichess bot account?"
        required: false
        type: boolean
        default: "false"
      matchmaking:
        description: "Enable matchmaking after tournament?"
        required: false
        type: boolean
        default: "true"
      tournament_id:
        description: "Tournament ID to auto-join (optional)"
        required: false
        default: ""
      additional_command:
        description: "Optional commands to pass (wrap in quotes)"
        required: false
        default: ""
      never_stop:
        description: "Never stop matchmaking unless it stops itself"
        required: false
        type: boolean
        default: "true"
      stop_seconds:
        description: "Seconds to wait before sending stop command (ignored if never_stop ticked)"
        required: false
        default: ""

permissions:
  actions: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 355  # Keep under GitHub 6h limit
    env:
      LICHESS_BOT_TOKEN: ${{ secrets.LICHESS_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Setup engines
        run: |
          mkdir -p engines
          curl -L -o stockfish.zip http://abrok.eu/stockfish/latest/linux/stockfish_x64_modern.zip
          unzip -o stockfish.zip -d engines/
          mv engines/stockfish_* engines/sf
          chmod +x engines/sf
          wget https://github.com/thesuperdabc/NimasBot/raw/refs/heads/main/engines/fsf -O engines/fsf
          chmod +x engines/fsf

      - name: Clone Private Config Repo
        uses: actions/checkout@v4
        with:
          repository: mike-koala-bear/tacticalbot-config
          token: ${{ secrets.PRIVATE_CONFIG_TOKEN }}
          path: tacticalbot-config

      - name: Copy Private Config
        run: |
          if [ -f tacticalbot-config/config.yml ]; then
            cp tacticalbot-config/config.yml ./config.yml
          fi

      - name: Inject Bot Token
        run: sed -i "s/tokenXXXXX/${{ secrets.LICHESS_KEY }}/g" config.yml

      - name: Join Tournament (if provided)
        if: ${{ github.event.inputs.tournament_id != '' }}
        run: |
          TOURNAMENT_ID="${{ github.event.inputs.tournament_id }}"
          echo "Joining tournament $TOURNAMENT_ID..."
          curl -s -X POST \
            -H "Authorization: Bearer $LICHESS_BOT_TOKEN" \
            https://lichess.org/api/tournament/$TOURNAMENT_ID/join
          echo "✅ Tournament join request sent"

      - name: Run Bot with Hybrid Mode
        run: |
          echo "Starting bot..."
          
          UPGRADE="${{ github.event.inputs.upgrade }}"
          MATCHMAKING="${{ github.event.inputs.matchmaking }}"
          ADDITIONAL_CMD=${{ toJSON(github.event.inputs.additional_command) }}
          NEVER_STOP="${{ github.event.inputs.never_stop }}"
          STOP_SECONDS="${{ github.event.inputs.stop_seconds }}"

          CMD="python3 -u user_interface.py"
          [ "$UPGRADE" = "true" ] && CMD="$CMD --upgrade"
          [ -n "$ADDITIONAL_CMD" ] && CMD="$CMD $ADDITIONAL_CMD"

          # Join tournament if ID provided
          if [ "${{ github.event.inputs.tournament_id }}" != "" ]; then
            CMD="$CMD tournament ${{ github.event.inputs.tournament_id }}"
          fi

          echo "Running command: $CMD"
          eval "$CMD" &
          BOT_PID=$!

          # Schedule stop for GitHub workflow limit
          ( sleep 21000 && echo "Time up. Killing bot..." && kill -SIGTERM $BOT_PID ) &

          wait $BOT_PID
          echo "Tournament finished or workflow timed out."

          # Start matchmaking automatically if enabled
          if [ "$MATCHMAKING" = "true" ]; then
            echo "Starting matchmaking..."
            python3 -u user_interface.py matchmaking
          fi
